import { NestFactory } from '@nestjs/core';
import { AppModule } from '../src/app.module';
import { EmailService } from '../src/modules/auth/email.service';

async function testEmailConfiguration() {
  console.log('üîß Verificando configuraci√≥n de email...');
  
  try {
    const app = await NestFactory.create(AppModule);
    const emailService = app.get(EmailService);
    
    // Verificar conexi√≥n
    const isConnected = await emailService.verificarConexion();
    
    if (isConnected) {
      console.log('‚úÖ Configuraci√≥n de email verificada exitosamente');
      console.log('üìß El sistema est√° listo para enviar emails reales');
      
      // Opcional: enviar email de prueba si se especifica un email
      const emailPrueba = process.argv[2];
      if (emailPrueba) {
        console.log(`üìÆ Enviando email de prueba a: ${emailPrueba}`);
        await emailService.enviarCodigoRecuperacion(emailPrueba, '123456');
        console.log('‚úÖ Email de prueba enviado exitosamente');
      }
    } else {
      console.log('‚ùå Error en la configuraci√≥n de email');
      console.log('üí° Verifica las variables EMAIL_USER y EMAIL_PASSWORD en el archivo .env');
    }
    
    await app.close();
  } catch (error) {
    console.error('‚ùå Error al verificar configuraci√≥n:', error.message);
    console.log('\nüìã Pasos para configurar Gmail:');
    console.log('1. Activar verificaci√≥n en dos pasos en tu cuenta Gmail');
    console.log('2. Crear una "Contrase√±a de aplicaci√≥n" espec√≠fica');
    console.log('3. Usar esa contrase√±a en EMAIL_PASSWORD (no tu contrase√±a normal)');
    console.log('4. Configurar EMAIL_USER con tu direcci√≥n de Gmail');
  }
}

testEmailConfiguration();
